---
import LinkButton from "@/components/LinkButton.astro";
import { ThemeToggle } from "@/components/theme-toggle";
import Layout from "@/layouts/Layout.astro";

export function getStaticPaths() {
  return [
    { params: { slug: "reflections-on-5" } },
    { params: { slug: "ask-stupidly" } },
    { params: { slug: "state-of-ai" } },
  ];
}

const { slug } = Astro.params;

const posts = {
  "reflections-on-5": {
    title: "Reflections on 5 years in software",
    content:
      "Experience is king. More so than it ever should have been. The slowest coder that's slept through 3 years at meta is regarded higher than someone with gaps in their resume. This sometimes leads to very unqualified people ending up in positions that they never should have reached. I have seen this now from both ends: I have worked under incompetent managers that earned their seniority at large corporations, and from the other end, watching the worst students land prestigious employment after a couple years job hopping.  Show me that you've built something without guidance or jira tickets. Show me that you haven't just memorized the steps from a book. Show me the code.",
    date: "2023-05-15",
  },
  "ask-stupidly": {
    title: "Don't fear asking stupid questions",
    content:
      "Ego is a plant that needs to be trimmed every so often. Imperceptibly, it grows to a point where you stop learning. You grow afraid to ask questions that might indicate you're not as good as you think you are, or as good as you think others perceive you. In software, the term 'imposter syndrome' is fairly well known, and given the complexity of this work its occurrence is common. It's seen as an enemy, but I think it should be sought out. You should strive to be surrounded by skilled peers that inspire it. To counter imposter syndrome, you must develop tools that can defeat your own self-skepticism.",
    date: "2023-06-01",
  },
  "state-of-ai": {
    title: "On the coming AI revolution",
    content:
      "I don't think we'll ever see a point where programming as a job ends because the existence of AI. It may change, as it has, but the job of developers merely shifts and never disappears. Even talks of removing the need for juniors seems hasty. And think: When the generated code we produce becomes obsolete or no longer fits modern problems, the dataset used to retrain the AI may have well been generated by an AI itself.",
    date: "2023-06-15",
  },
} as const;

const post = posts[slug as keyof typeof posts];
---

<Layout title={post.title}>
  <main class="container mx-auto px-4 py-8">
    <article class="prose lg:prose-xl mx-auto">
      <h1 class="text-2xl text-gray-900 dark:text-gray-200">{post.title}</h1>
      <p class="text-gray-500">{post.date}</p>
      <p class="text-gray-600 dark:text-gray-400 mt-4">{post.content}</p>
    </article>
    <div class="mt-8 text-center">
      <ThemeToggle client:load rectangle />
      <LinkButton href="/#blog">Back to Home</LinkButton>
    </div>
  </main>
</Layout>
